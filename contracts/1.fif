"Asm.fif" include
// automatically generated from `imports/stdlib.fc` `task1.fc` 
PROGRAM{
  DECLPROC load_data
  DECLPROC save_data
  DECLPROC recv_internal
  DECLPROC recv_external
  77871 DECLMETHOD get_seqno
  93766 DECLMETHOD get_execution_time
  load_data PROCINLINE:<{
    // 
    c4 PUSH	//  _1
    CTOS	//  ds
    8 PUSHPOW2	//  ds _4=256
    LDUX	//  _3 ds
    32 PUSHINT	//  _3 ds _7=32
    LDUX	//  _3 _6 ds
    LDMSGADDR	//  _3 _6 _9 ds
    32 PUSHINT	//  _3 _6 _9 ds _12=32
    LDUX	//  _3 _6 _9 _21 _20
    DROP	//  _3 _6 _9 _11
  }>
  save_data PROCINLINE:<{
    //  public_key execution_time receiver seqno
    s0 s3 XCHG
    NEWC	//  seqno execution_time receiver public_key _4
    256 STU	//  seqno execution_time receiver _6
    s1 s2 XCHG	//  seqno receiver execution_time _6
    32 STU	//  seqno receiver _8
    SWAP	//  seqno _8 receiver
    STSLICER	//  seqno _9
    32 STU	//  _11
    ENDC	//  _12
    c4 POP
  }>
  recv_internal PROC:<{
    //  my_balance msg_value in_msg_full in_msg_body
    4 BLKDROP	// 
  }>
  recv_external PROC:<{
    //  in_msg
    32 PUSHINT	//  in_msg _3=32
    LDUX	//  op in_msg
    64 PUSHINT	//  op in_msg _7=64
    LDUX	//  op _99 _98
    NIP	//  op in_msg
    load_data INLINECALLDICT	//  op in_msg public_key execution_time receiver seqno
    s5 PUSH
    2649817719 PUSHINT	//  op in_msg public_key execution_time receiver seqno op _14=2649817719
    EQUAL	//  op in_msg public_key execution_time receiver seqno _15
    IF:<{	//  op in_msg public_key execution_time receiver seqno
      s0 s4 XCHG
      9 PUSHPOW2	//  op seqno public_key execution_time receiver in_msg _18=512
      LDSLICEX	//  op seqno public_key execution_time receiver signature in_msg
      LDREF	//  op seqno public_key execution_time receiver signature _107 _106
      DROP	//  op seqno public_key execution_time receiver signature body
      DUP	//  op seqno public_key execution_time receiver signature body body
      HASHCU	//  op seqno public_key execution_time receiver signature body hash
      SWAP	//  op seqno public_key execution_time receiver signature hash body
      CTOS	//  op seqno public_key execution_time receiver signature hash s
      32 PUSHINT	//  op seqno public_key execution_time receiver signature hash s _29=32
      LDUX	//  op seqno public_key execution_time receiver signature hash locked_for s
      32 PUSHINT	//  op seqno public_key execution_time receiver signature hash locked_for s _33=32
      LDUX	//  op seqno public_key execution_time receiver signature hash locked_for _111 _110
      DROP	//  op seqno public_key execution_time receiver signature hash locked_for new_seqno
      s0 s7 XCHG	//  op new_seqno public_key execution_time receiver signature hash locked_for seqno
      INC	//  op new_seqno public_key execution_time receiver signature hash locked_for _36
      s7 s(-1) PUXC	//  op new_seqno public_key execution_time receiver signature hash locked_for new_seqno _36
      NEQ	//  op new_seqno public_key execution_time receiver signature hash locked_for _37
      IF:<{	//  op new_seqno public_key execution_time receiver signature hash locked_for
        119 THROW
      }>	//  op new_seqno public_key execution_time receiver signature hash locked_for
      s2 s5 XCPU	//  op new_seqno public_key execution_time receiver locked_for hash signature public_key
      CHKSIGNU	//  op new_seqno public_key execution_time receiver locked_for _41
      120 THROWIFNOT
      DUP	//  op new_seqno public_key execution_time receiver locked_for locked_for
      1 LESSINT	//  op new_seqno public_key execution_time receiver locked_for _44
      IF:<{	//  op new_seqno public_key execution_time receiver locked_for
        121 THROW
      }>	//  op new_seqno public_key execution_time receiver locked_for
      s2 PUSH
      NOW	//  op new_seqno public_key execution_time receiver locked_for execution_time _47
      LESS	//  op new_seqno public_key execution_time receiver locked_for _48
      IF:<{	//  op new_seqno public_key execution_time receiver locked_for
        122 THROW
      }>	//  op new_seqno public_key execution_time receiver locked_for
      NOW	//  op new_seqno public_key execution_time receiver locked_for _51
      OVER	//  op new_seqno public_key execution_time receiver locked_for _51 locked_for
      ADD	//  op new_seqno public_key execution_time receiver locked_for _52
      s3 PUSH	//  op new_seqno public_key execution_time receiver locked_for _52 execution_time
      LEQ	//  op new_seqno public_key execution_time receiver locked_for _53
      IF:<{	//  op new_seqno public_key execution_time receiver locked_for
        123 THROW
      }>	//  op new_seqno public_key execution_time receiver locked_for
      ACCEPT
      NOW	//  op new_seqno public_key execution_time receiver locked_for _57
      SWAP	//  op new_seqno public_key execution_time receiver _57 locked_for
      ADD	//  op new_seqno public_key execution_time receiver _58
      s3 s0 s0 XCHG3
      s0 s4 PUXC	//  op receiver execution_time public_key _58 receiver new_seqno
      save_data INLINECALLDICT
      SWAP	//  op execution_time receiver
    }>ELSE<{
      DROP
      2 2 BLKDROP2	//  op execution_time receiver
    }>
    s0 s2 XCHG
    3142312500 PUSHINT	//  receiver execution_time op _60=3142312500
    EQUAL	//  receiver execution_time _61
    IF:<{	//  receiver execution_time
      NOW	//  receiver execution_time _62
      SWAP	//  receiver _62 execution_time
      LESS	//  receiver _63
      IF:<{	//  receiver
        124 THROW
      }>	//  receiver
      ACCEPT
      0 PUSHINT	//  receiver _68=0
      DUP	//  receiver _68=0 _69=0
      24 PUSHINT	//  receiver _68=0 _69=0 _70=24
      NEWC	//  receiver _68=0 _69=0 _70=24 _71
      6 STU	//  receiver _68=0 _69=0 _73
      s0 s3 XCHG2	//  _69=0 _68=0 _73 receiver
      STSLICER	//  _69=0 _68=0 _74
      OVER	//  _69=0 _68=0 _74 _75=0
      STGRAMS	//  _69=0 _68=0 _76
      s1 s2 XCHG	//  _68=0 _69=0 _76
      107 STU	//  _68=0 _90
      32 STU	//  _92
      ENDC	//  msg
      7 PUSHPOW2	//  msg _94=128
      SENDRAWMSG
    }>ELSE<{
      2DROP	// 
    }>
  }>
  get_seqno PROC:<{
    // 
    load_data INLINECALLDICT	//  _5 _6 _7 _8
    3 1 BLKDROP2	//  seqno
  }>
  get_execution_time PROC:<{
    // 
    load_data INLINECALLDICT	//  _5 _6 _7 _8
    s2 s3 XCHG
    3 BLKDROP	//  execution_time
  }>
}END>c
